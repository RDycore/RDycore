# This CMake function generates a file named cyaml_sediment_fields.h in the include/
# folder within your build directory. The file defines sediment size class fields
# for our YAML schema based on the build parameter MAX_NUM_SEDIMENT_CLASSES. See
# related comments in src/yaml_input.c.

function(generate_cyaml_sediment_fields)
  math(EXPR N "${MAX_NUM_SEDIMENT_CLASSES} - 1") # loop variable
  list(APPEND lines "// This file was generated by CMake using cmake/generate_cyaml_sediment_fields.cmake.")
  list(APPEND lines "// PLEASE DO NOT EDIT DIRECTLY -- change MAX_NUM_SEDIMENT_CLASSES and rerun CMake.")
  list(APPEND lines "")

  list(APPEND lines "// This macro is used in region_condition_spec_fields_schema in yaml_input.c")
  list(APPEND lines "#define CYAML_REGION_CONDITION_SPEC_SEDIMENT_FIELDS \\")
  foreach(i RANGE ${N})
    list(APPEND lines "    CYAML_FIELD_STRING(\"c${i}\", CYAML_FLAG_OPTIONAL, RDyRegionConditionSpec, sediment[${i}], 0), \\")
  endforeach()
  list(APPEND lines "")

  list(APPEND lines "// This macro is used in mms_sediment_fields_schema in yaml_input.c")
  list(APPEND lines "#define CYAML_MMS_SEDIMENT_FIELDS \\")
  foreach(i RANGE ${N})
    list(APPEND lines "    CYAML_FIELD_STRING(\"c${i}\", CYAML_FLAG_OPTIONAL, RDyMMSSedimentSolutions, expressions.c[${i}], 0), \\")
    list(APPEND lines "    CYAML_FIELD_STRING(\"dc${i}dx\", CYAML_FLAG_OPTIONAL, RDyMMSSedimentSolutions, expressions.dcdx[${i}], 0), \\")
    list(APPEND lines "    CYAML_FIELD_STRING(\"dc${i}dy\", CYAML_FLAG_OPTIONAL, RDyMMSSedimentSolutions, expressions.dcdy[${i}], 0), \\")
    list(APPEND lines "    CYAML_FIELD_STRING(\"dc${i}dt\", CYAML_FLAG_OPTIONAL, RDyMMSSedimentSolutions, expressions.dcdt[${i}], 0), \\")
  endforeach()
  list(APPEND lines "")

  list(APPEND lines "// This macro is used in mms_convergence_rates_fields_schema in yaml_input.c")
  list(APPEND lines "#define CYAML_MMS_CONVERGENCE_RATES_SEDIMENT_FIELDS \\")
  foreach(i RANGE ${N})
    list(APPEND lines "    CYAML_FIELD_MAPPING(\"c${i}\", CYAML_FLAG_OPTIONAL, RDyMMSConvergenceRates, c[${i}], mms_error_norms_fields_schema), \\")
  endforeach()
  list(APPEND lines "")
  list(APPEND lines "")

  # write our lines list to a newline-delimited string and then write the file
  string(REPLACE ";" "\n" source "${lines}")
  set(header_file ${PROJECT_BINARY_DIR}/include/cyaml_sediment_fields.h)
  message(STATUS "Generating ${header_file}")
  file(WRITE ${header_file} ${source})
endfunction()
