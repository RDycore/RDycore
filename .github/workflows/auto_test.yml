name: auto_test

# This action is triggered:
# 1. when someone creates a pull request for a merge to the main branch
# 2. when changes are merged into the main branch (via a pull request)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Below are jobs, each of which runs sequentially.
jobs:
  # This job builds RDycore and runs our test suite.
  build:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    env:
      ASAN_OPTIONS: detect_leaks=0

    # A build matrix storing all desired configurations.
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
        build-type: [Debug] #, Release]
        container: ["coherellc/rdycore-petsc:95934b0d3-int32",
                    "coherellc/rdycore-petsc:95934b0d3-int64"]

    # Steps for building and running tests.
    steps:

    - name: Checking out repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        submodules: recursive

    - name: Configuring RDycore (${{ matrix.build-type }})
      run: |
        cmake -S . -B build -G Ninja \
        -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
        -DENABLE_COVERAGE=ON \
        -DENABLE_SANITIZERS=ON

    - name: Building RDycore (${{ matrix.build-type }})
      run: |
        grep PETSC_VERSION_GIT $PETSC_DIR/$PETSC_ARCH/include/petscconf.h | sed -e s/#define\ //g
        cd build
        ninja

    - name: Running tests (${{ matrix.build-type }})
      run: |
        set +e # disable "fast fail" (continue on test failures to show output)
        cd build
        ninja test
        failed=$?
        if [ $failed -ne 0 ]; then
          cat Testing/Temporary/LastTest.log
        fi
        test $failed -eq 0

    - name: Evaluating code coverage
      run: |
        cd build
        ninja coverage

    - name: Uploading coverage report to codecov.io
      if: ${{ (contains(matrix.os, 'ubuntu')) && (matrix.build-type == 'Debug') && (contains(matrix.container, 'int32')) }}
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        files: build/coverage.info
        #flags: unittests # optional
        name: RDycore
        verbose: true
      env:
        token: ${{ secrets.CODECOV_TOKEN }}
